{
  "Uuid": "de3ff1ac-2554-4c32-8a6a-a69071c17d30",
  "IsCustomNode": false,
  "Description": null,
  "Name": "View-Writting-211127",
  "ElementResolver": {
    "ResolutionMap": {
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "REBAR INFO",
      "Id": "1d3c9ccda7f9480ebc3a455834d00434",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6477b5ae76d84fc1ac844121112a1b9a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport Autodesk.DesignScript.Geometry.Point as pt\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nimport Revit.Elements.TextNote as tn\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nimport Autodesk.Revit.DB.JoinGeometryUtils as JGU\r\nimport time\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\ndef get_sheet_view_by_search_string(search_string):\r\n    global doc    \r\n    viewCollector = list(FilteredElementCollector(doc).OfClass(ViewSheet))\r\n    try:\r\n\t    view_  = [v for v in viewCollector if search_string in v.Name][0]\r\n\t    return view_\r\n    except:\r\n    \treturn\r\ndef get_textnote(view_):\r\n\tglobal doc , debugger,text_type\r\n\ttext_collector = list(FilteredElementCollector(doc,view_.Id).OfClass(TextNote))\r\n\tdic_text = {}\r\n\tfor t in text_collector:\r\n\t\ttry:\r\n\t\t\t# Global Text Type:\r\n\t\t\ttext_type = t.TextNoteType\r\n\t\t\tdic_text[str(t.Id)] = {}\r\n\t\t\t# GIÁ TRI TEXTNOTE\t\t\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteValue\"] = t.Text.strip()#GetFormattedText().GetPlainText().strip()\t\t\t\t\r\n\t\t\t# GIÁ TRI TEXTNOTE LIST sep TAB\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteValueColumnList\"] = []\t\t\t\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteValueColumnList\"].append(t.Text.strip().split(\"\\t\"))#GetFormattedText().GetPlainText().strip()\t\r\n\t\t\t# ÐO DAI TEXTNOTE\t\t\r\n\t\t\ttext_type_border = t.TextNoteType.LookupParameter(\"Leader/Border Offset\").AsDouble()*304.8\t\t\t\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteWidth\"] = (\"{:0.0f}\".format(round(t.Width*304.8 + 2*text_type_border)))\t\t\t\r\n\t\t\t# TEXTNOTE TYPE\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteType\"] = t.Name#GetFormattedText().GetPlainText().strip()\t\t\t\t\r\n\t\t\t# TAB SIZE\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteTabSize\"] = t.TextNoteType.LookupParameter(\"Tab Size\").AsDouble()*304.8\r\n\t\t\t# TEXT SIZE\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteTextSize\"] = t.TextNoteType.LookupParameter(\"Text Size\").AsDouble()*304.8\r\n\t\t\t# TEXT FONT\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteFont\"] = t.TextNoteType.LookupParameter(\"Text Font\").AsString()\r\n\t\t\t# TEXT BOLD\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteBold\"] = t.TextNoteType.LookupParameter(\"Bold\").AsInteger()\r\n\t\t\t# TEXT ITALIC\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteItalic\"] = t.TextNoteType.LookupParameter(\"Italic\").AsInteger()\r\n\t\t\t# TEXT UNDERLINE\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteUnderline\"] = t.TextNoteType.LookupParameter(\"Underline\").AsInteger()\r\n\t\t\t# TEXT WIDTH FACTOR\r\n\t\t\tdic_text[str(t.Id)][\"TextNoteWidthFactor\"] = t.TextNoteType.LookupParameter(\"Width Factor\").AsDouble()\r\n\t\texcept Exception as ex:\r\n\t\t\tdebugger.append(ex)\r\n\t\t\tpass\r\n\treturn dic_text\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\ndebugger = []\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nopt = Options()\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\n#----------------------------------------------------#\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nview_name = IN[0]\r\n\r\ndic = {\t\"a\":{\"d10\":10,\"d16\":16,\"d20\":20},\r\n\t\t\"b\":{\"d10\":11,\"d16\":17,\"d20\":21},\r\n\t\t\"c\":{\"d10\":12,\"d16\":18,\"d20\":22}}\r\n\r\n# TEXTNOTE TYPE\r\ntext_type = None\r\n\r\n\r\n# GET VIEW SHEET\r\nview_  = get_sheet_view_by_search_string(view_name)\r\n\r\n# GET ALL TEXTNOTE\r\ndic_text = get_textnote(view_)\r\n\r\n\r\n\r\nOUT = view_,text_type",
      "VariableInputPorts": true,
      "Id": "45382869e6994866b5308cf4dc3591fc",
      "Inputs": [
        {
          "Id": "f4d397adf98f44c99aef6735fddc3782",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "923aa68fc55744c79f5c5b0e525ae332",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9aa91f7a77f468da195efb993345973",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "627a4cda5f7849208324f9d63d418cab",
      "Inputs": [
        {
          "Id": "88557ee461664af4aa1751bb3e500597",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c87b964c2a244a0495ff9dec5fcdaecd",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "view = res[0];\npoint = Point.ByCoordinates(0,0);\ntext = \"TEST\";\nalign = \"Left\";\ntext_type = res[1];\nkeep_rot = false;\nrot = 0;",
      "Id": "066185a2f7834392b31039b20fa9c798",
      "Inputs": [
        {
          "Id": "55bf689cbd0c4f2193ca5d2c5549bcf8",
          "Name": "res",
          "Description": "res",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e216a4af0ea4ad5985b91dedbe07f50",
          "Name": "",
          "Description": "view",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c4bcdf01abf4c28a801a00807d8c8c7",
          "Name": "",
          "Description": "point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b9d9f4bc023484281b86854c4d35761",
          "Name": "",
          "Description": "text",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "681a3827349a4ff59ccb59e427c5e60a",
          "Name": "",
          "Description": "align",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18d605dda28c422aa409f2a91490723d",
          "Name": "",
          "Description": "text_type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e45f5b00bb404f8e8a4feb8b8a9b9cb2",
          "Name": "",
          "Description": "keep_rot",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1d59aef2df84a82b26235bd9cff0807",
          "Name": "",
          "Description": "rot",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport Autodesk.DesignScript.Geometry.Point as pt\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nclr.AddReference('RevitAPIUI')\r\nfrom Autodesk.Revit.UI import TaskDialog\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nimport Revit.Elements.TextNote as tn\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\nfrom System.Collections.Generic import *\r\nimport Autodesk.Revit.DB.JoinGeometryUtils as JGU\r\nimport time\r\n#-----------------------------------------------------------------------#\r\ndef get_sheet_view_by_search_string(search_string):\r\n    global doc    \r\n    viewCollector = list(FilteredElementCollector(doc).OfClass(ViewSheet))\r\n    try:\r\n\t    view_  = [v for v in viewCollector if search_string in v.Name][0]\r\n\t    return view_\r\n    except:\r\n    \treturn\r\n\r\n#-----------------------------------------------------------------------#\r\ndebugger = []\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\nopt = Options()\r\n#-----------------------------------------------------------------------#\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndata = IN[0]\r\ndic = {\"a\":{\"D10\":10,\"D16\":16,\"D20\":20},\r\n\t\t\"b\":{\"D10\":11,\"D16\":17,\"D20\":21},\r\n\t\t\"c\":{\"D10\":12,\"D16\":18,\"D20\":22}}#IN[0]\r\n#VIEW\r\nview = IN[1]\r\n\r\n# DATA REBAR WEIGHT\r\nrb_data = IN[3][1:]\r\nrb_types = [\"D{:0.0f}\".format(data[0]) for data in rb_data]\r\n\r\n# WRITE TEXT\r\n# POINT\r\npoint = pt.ByCoordinates(0,0) #START\r\n# TEXT TO WRITE\r\ndic_text={} # primitive\r\nfor ttt in rb_types:\r\n    dic_text[ttt] = 0\r\n\r\nnew_dic = {}\r\nfor d in dic:\r\n\tnew_dic[d] = {}\r\n\tnew_d = dic_text.copy()\r\n\tnew_d.update(dic[d])\r\n\tnew_dic[d] = new_d\r\n\r\nheaders = \"Category\\t{}\".format(\"\\t\".join([tt for tt in rb_types]))\r\n\r\ncontent = []\r\ncontent.append(headers)\r\nfor d in new_dic:\r\n\tcontent.append(\"{}\\t{}\".format(d,\"\\t\".join([str(new_dic[d][dd]) for dd in new_dic[d]])))\r\n\r\ntext = \"\\n\".join(content)#\"\\n\".join([\"\\t\".join([str(new_dic[d][dd]) for dd in new_dic[d]]) for d in new_dic])\t\r\n# ALIGN\r\nalign = \"Left\"\r\n# TEXT TYPE\r\n\r\ntext_type = IN[2]\r\nkeep_rot = False\r\nrot = 0\r\n# WRITE\r\nt= tn.ByLocation(view,point,text,align,text_type,keep_rot,rot)\r\n\r\nOUT = headers",
      "VariableInputPorts": true,
      "Id": "d633402465964b909667161d333d0688",
      "Inputs": [
        {
          "Id": "7837f34248484ba2b7b7216e904eb6f4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b593e1d647594b799620b95c38229636",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fec9eecb558b4c22940fa32a7ec56867",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc38f153fff14189935d79efb699b8be",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f3aa41f62ac4ddfb2621e57cf65ba24",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "2.5mm Arial",
      "Id": "e7304c30d2ff42f6a18fac9049eb2850",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ea41edbe05047a3b5124f5dca4fef55",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "{\"a\":{\"d10\":10,\"d16\":16,\"d20\":20},\r\n\t\t\"b\":{\"d10\":11,\"d16\":17,\"d20\":21},\r\n\t\t\"c\":{\"d10\":12,\"d16\":18,\"d20\":22}}",
      "Id": "aab40f7d321b42a2b97d0a18824dd4e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "662907d825b84005b05c56d745218da5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "F:\\_NGHIEN CUU\\_Github\\py_dynamo_revit\\rebar\\rebar_data.xlsx",
      "InputValue": ".\\rebar_data.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "e4f177e654fc49c2930618432d85a8c9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8a51773ff374789b779051787e6a8dd",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8e1fc5be53eb4a7aafad0ab2668f431c",
      "Inputs": [
        {
          "Id": "6d5428bd14184334b4d676ee96db8115",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e78c125bdc94421b89e9ae45806d5775",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Rebar Weight\";\nfalse;",
      "Id": "72650e5e3a2a4dcfbb3ccb7f280f5b1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e243d106a98144799ff516150bfcf859",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e464350a2bb4c9b821d288b50dccc85",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "81507f0107ce4e2d82602e5f4cd1006b",
      "Inputs": [
        {
          "Id": "ca5b8fcf4332483582b13b17b7b6df29",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff1c8de6b7c840e4bdae5d4a4c7e5ea6",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4c5b6c7b5a947819dfc4896c0ca8bd8",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9399e2ce36f54da384ed218b3c9361ae",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b16c04f536b84575823b4aa73edbb373",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a020ca0e0e204c8a8722bfff2b836758",
      "Inputs": [
        {
          "Id": "5655b29ac19c4c878d1e17666659edd7",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d63fb3cc220345fea0764bf3e543a361",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    }
  ],
  "Connectors": [
    {
      "Start": "6477b5ae76d84fc1ac844121112a1b9a",
      "End": "f4d397adf98f44c99aef6735fddc3782",
      "Id": "898241e7a6404108959bf1bfd4aac92f"
    },
    {
      "Start": "d9aa91f7a77f468da195efb993345973",
      "End": "88557ee461664af4aa1751bb3e500597",
      "Id": "a3678a74b5b94f71909a4172d5326496"
    },
    {
      "Start": "d9aa91f7a77f468da195efb993345973",
      "End": "55bf689cbd0c4f2193ca5d2c5549bcf8",
      "Id": "7f6a119dbeb944c9b72467c61b0639c4"
    },
    {
      "Start": "8e216a4af0ea4ad5985b91dedbe07f50",
      "End": "b593e1d647594b799620b95c38229636",
      "Id": "dfd06a3861dd4407a465a5d54e65796a"
    },
    {
      "Start": "18d605dda28c422aa409f2a91490723d",
      "End": "fec9eecb558b4c22940fa32a7ec56867",
      "Id": "72f832f718904650b0284c0a50e9077d"
    },
    {
      "Start": "1ea41edbe05047a3b5124f5dca4fef55",
      "End": "923aa68fc55744c79f5c5b0e525ae332",
      "Id": "b7b128d065c04d39998e0d60b7b1993a"
    },
    {
      "Start": "662907d825b84005b05c56d745218da5",
      "End": "7837f34248484ba2b7b7216e904eb6f4",
      "Id": "67668125f55548c1b8fb055f175bb08d"
    },
    {
      "Start": "d8a51773ff374789b779051787e6a8dd",
      "End": "6d5428bd14184334b4d676ee96db8115",
      "Id": "7a844db057234189a6a56bf836545e38"
    },
    {
      "Start": "e78c125bdc94421b89e9ae45806d5775",
      "End": "ca5b8fcf4332483582b13b17b7b6df29",
      "Id": "67cca4e675074dc4ab51c1aff30e60ad"
    },
    {
      "Start": "e243d106a98144799ff516150bfcf859",
      "End": "ff1c8de6b7c840e4bdae5d4a4c7e5ea6",
      "Id": "672e2f2f153f485cbc2e2191c4c254d2"
    },
    {
      "Start": "7e464350a2bb4c9b821d288b50dccc85",
      "End": "e4c5b6c7b5a947819dfc4896c0ca8bd8",
      "Id": "706df63e528940ee800e9c5eeda0a9e6"
    },
    {
      "Start": "7e464350a2bb4c9b821d288b50dccc85",
      "End": "9399e2ce36f54da384ed218b3c9361ae",
      "Id": "fba28a28f7704bf0809d6578d3d1b30b"
    },
    {
      "Start": "b16c04f536b84575823b4aa73edbb373",
      "End": "cc38f153fff14189935d79efb699b8be",
      "Id": "04323ee48fa54a01a11b16ac30382dc9"
    },
    {
      "Start": "b16c04f536b84575823b4aa73edbb373",
      "End": "5655b29ac19c4c878d1e17666659edd7",
      "Id": "5050f7416fe043aa94626d8462e66f72"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.1.0.7500",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Sheet Name Contains",
        "Id": "1d3c9ccda7f9480ebc3a455834d00434",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -155.029464854225,
        "Y": 139.02414337937046
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "45382869e6994866b5308cf4dc3591fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 260.00979221588233,
        "Y": 187.72255138226794
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "627a4cda5f7849208324f9d63d418cab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 519.108773972692,
        "Y": 322.63732064589345
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "066185a2f7834392b31039b20fa9c798",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 491.50699691528587,
        "Y": 60.113475558384522
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script-Massive Write Textnote",
        "Id": "d633402465964b909667161d333d0688",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1128.8348732516113,
        "Y": -43.2374322548734
      },
      {
        "ShowGeometry": true,
        "Name": "Text Type Name Contains",
        "Id": "e7304c30d2ff42f6a18fac9049eb2850",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -157.32364711921389,
        "Y": 301.60968581722352
      },
      {
        "ShowGeometry": true,
        "Name": "Data",
        "Id": "aab40f7d321b42a2b97d0a18824dd4e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -165.45123471993804,
        "Y": -140.817746987895
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "e4f177e654fc49c2930618432d85a8c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -187.85362736687182,
        "Y": 507.11414445258538
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "8e1fc5be53eb4a7aafad0ab2668f431c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18.886924803035186,
        "Y": 524.02928053921437
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "72650e5e3a2a4dcfbb3ccb7f280f5b1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -13.921941791079803,
        "Y": 622.80716239118681
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "81507f0107ce4e2d82602e5f4cd1006b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 541.87645063391221,
        "Y": 597.18067226515393
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "a020ca0e0e204c8a8722bfff2b836758",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1121.4237717054361,
        "Y": 725.93071944286464
      }
    ],
    "Annotations": [
      {
        "Id": "df0f978a29034295be4c56b3d86d0ebe",
        "Title": "",
        "Nodes": [
          "45382869e6994866b5308cf4dc3591fc"
        ],
        "Left": 250.00979221588233,
        "Top": 134.72255138226794,
        "Width": 144.0,
        "Height": 172.0,
        "FontSize": 36.0,
        "InitialTop": 187.72255138226794,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -99.660560563216677,
    "Y": 57.94214896199469,
    "Zoom": 0.62861181605426508
  }
}