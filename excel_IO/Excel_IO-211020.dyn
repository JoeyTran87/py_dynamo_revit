{
  "Uuid": "4552eb0f-0d5d-4b01-87e9-be3025f48e8e",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Excel_IO-211020",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr, time,os\r\nclr.AddReference(\"Microsoft.Office.Interop.Excel\")\r\n# from System.Runtime.InteropServices import Marshal\r\nimport Microsoft.Office.Interop.Excel as Excel\r\n#---------------------------------------------------------------------------------------#\r\n#---------------------------------------------------------------------------------------#\r\n#---------------------------------------------------------------------------------------#\r\ndef write_excel(excel_path,sheet_name,row,column,data):\r\n\tglobal debugger      \r\n\texcel_app = Excel.ApplicationClass()\r\n\texcel_app.Visible = show_excel\r\n\tworkbook = excel_app.Workbooks.Open(excel_path)\r\n\tworksheets = workbook.Worksheets\r\n\tsheet = [worksheets(i+1) for i in range(worksheets.Count) if worksheets(i+1).Name == sheet_name][0]    \r\n\tif data.__class__.__name__ == \"str\":\r\n\t\tsheet.Cells(row,column).Value = data       \r\n\ttry:\r\n\t\tworkbook.Close(SaveChanges = True,Filename = excel_path)\r\n\texcept Exception as ex:\r\n\t\tdebugger.append(ex)\r\n\t\tpass\r\n\r\ndef write_excel_2(file_name,dir_path,sheet_name,row,column,data):\r\n\tglobal debugger\r\n\ttime_ = time.strftime(\"%y%m%d %H%M%S\",time.localtime(time.time()))\r\n\texcel_path = \"{0}-{1}{2}\".format(\"\\\\\".join([dir_path,file_name]),time_ ,\".xlsx\")\r\n\t\r\n\texcel_app = Excel.ApplicationClass()\r\n\texcel_app.Visible = show_excel\t\r\n\tactive_workbook = excel_app.ActiveWorkbook\r\n\tif active_workbook == None:\r\n\t\texcel_app.Workbooks.Add()\r\n\t\tactive_workbook = excel_app.ActiveWorkbook\r\n\r\n\tworksheets = active_workbook.Worksheets\r\n\tif not sheet_name in [worksheets(i+1).Name for i in range(worksheets.Count)]:\r\n\t\tsheet = worksheets.Add()\r\n\t\tsheet.Name = sheet_name\r\n\telse:\r\n\t\tsheet = [worksheets(i+1) for i in range(worksheets.Count) if worksheets(i+1).Name == sheet_name][0]\r\n\t# WRITE DATA\r\n\tif data.__class__.__name__ == \"str\":\r\n\t\tsheet.Cells(row,column).Value = data\r\n\tif data.__class__.__name__ == \"list\":\r\n\t\tfor d in data:\r\n\t\t\tif not d.__class__.__name__ == \"list\":\r\n\t\t\t\tsheet.Cells(row + data.index(d),column).Value = d\r\n\t\t\telse:\r\n\t\t\t\tfor c in d:\r\n\t\t\t\t\tsheet.Cells(row + data.index(d),column + d.index(c)).Value = c\r\n\tif data.__class__.__name__ == \"dict\":\r\n\t\tkeys = sorted(data) #list\r\n\t\tfor k in keys:\r\n\t\t\tr = keys.index(k)\r\n\t\t\tc = 1\r\n\t\t\tsheet.Cells(row + r,column).Value = k\t\t\t\r\n\t\t\tif data[k].__class__.__name__ in [\"str\",\"float\"] :\r\n\t\t\t\tsheet.Cells(row + r,column + c).Value = data[k]\r\n\t\t\t# if data[d].__class__.__name__ == \"dict\":\r\n\t\t\t# \tsheet.Cells(row + r,column).Value = data[d]\t\r\n\t\r\n\t# save then close\r\n\tactive_workbook.SaveAs(Filename = excel_path)\r\n\t#active_workbook.Close()\r\n\t#excel_app.Quit()\r\n\treturn 0\r\n\r\ndef dic_to_list(dic,column_types,col_head_first = \"Category\"):\r\n\t\"\"\"\r\n\tdic (dict): Từ điển Dữ liệu Ex: {\"a\":{\"D10\":10,\"D16\":16,\"D20\":20},\r\n\t\t\t\t\t\t\t\t\t\"b\":{\"D10\":11,\"D16\":17,\"D20\":21},\r\n\t\t\t\t\t\t\t\t\t\"c\":{\"D10\":12,\"D16\":18,\"D20\":22}}\r\n\tcolumn_types (list): Danh sách Tên cột  Ex: [\"D10\",\"D12\",\"D14\",\"D16\",\"D18\"]\r\n\t---\r\n\t[['Category', 'D10', 'D12', 'D14', 'D16', 'D18']\r\n\t['a', 10, 0, 0, 16, 0, 20]\r\n\t['b', 11, 0, 0, 17, 0, 21]\r\n\t['c', 12, 0, 0, 18, 0, 22]]\r\n\t\"\"\"\r\n\tglobal time_start,data_name\r\n\ttry:\r\n\t\tif not dic.__class__.__name__ == \"dict\": # verify if dic not dict\r\n\t\t\traise Exception(\"Not dict\")\r\n\t\tcolumn_types = sorted([str(i) for i in column_types]) # ensure sorted list of strng\r\n\t\tcontent = []\r\n\t\tcontent.append(data_name)\r\n\t\tcontent.append(time_start)\r\n\r\n\t\theaders = []\r\n\t\theaders.append(col_head_first)\r\n\t\theaders.extend(column_types)\r\n\r\n\t\tcontent.append(headers)\r\n\t\tkeys = sorted(dic)\r\n\r\n\t\tdic_text={} # primitive Column head\r\n\t\tfor ttt in column_types:\r\n\t\t\tdic_text[ttt] = 0\r\n\t\tnew_dic = {}\r\n\r\n\t\tfor d in keys:\r\n\t\t\ttry:\r\n\t\t\t\tline = []\r\n\t\t\t\tline.append(d) # Category\r\n\t\t\t\t\r\n\t\t\t\tnew_d = dic_text.copy()\r\n\t\t\t\tnew_d.update(dic[d])\r\n\t\t\t\t# new_dic[d] = new_d\r\n\t\t\t\tline.extend([new_d[w] for w in sorted(new_d)]) # rebar weight ratio / category / type\r\n\t\t\t\tcontent.append(line)\r\n\t\t\texcept:\r\n\t\t\t\tpass\t\t\r\n\t\treturn content\r\n\texcept:\r\n\t\treturn sorted(dic)\r\n\r\ndef dictionary_to_dict(dic):\r\n\t\"\"\"Use for converting Dynamo Dictionary to Python dict\r\n\tApply for {'key':{'key':{}}}\r\n\t\"\"\"\t\r\n\tif dic.__class__.__name__ == \"Dictionary[object, object]\":\r\n\t\tdic = dict(dic)\t\t\r\n\ttry:\r\n\t\tfor d in dic:\t\t\t\r\n\t\t\tif dic[d].__class__.__name__ == \"Dictionary[object, object]\":\r\n\t\t\t\tdic[d] = dict(dic[d])\r\n\t\t\ttry:\r\n\t\t\t\tfor c in dic[d]:\r\n\t\t\t\t\tif dic[d][c].__class__.__name__ == \"Dictionary[object, object]\":\r\n\t\t\t\t\t\tdic[d][c] = dict(dic[d][c])\r\n\t\t\texcept:\r\n\t\t\t\tpass\r\n\texcept:\r\n\t\tpass\r\n\treturn dic\r\n\r\ndir_path = IN[0]\r\nsheet_name = IN[1]\r\nshow_excel = IN[2]\r\nfile_name = IN[3]\r\n\r\ndebugger = []\r\nexcel_path = \"\\\\\".join([dir_path,file_name]) + \".xlsx\"\r\ntime_start=\"\"\r\ndata_name=\"\"\r\n\r\ndata1 = [1,2,3,4]\r\ndata2 = IN[4]\r\n\r\nddd = {\"a\":{\"D10\":10,\"D16\":16,\"D20\":20},\r\n\t\"b\":{\"D10\":11,\"D16\":17,\"D20\":21},\r\n\t\"c\":{\"D10\":12,\"D16\":18,\"D20\":22}}\r\nct = [\"D10\",\"D12\",\"D14\",\"D16\",\"D18\",\"D20\"]\r\n\r\nOUT = write_excel_2(file_name,dir_path,sheet_name,1,1,dic_to_list(ddd,ct)),debugger\r\n\r\n\r\n# if not show_excel:\r\n# \ttime.sleep(5)\r\n# \texcel_app.Quit()",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "45ca9cf0d1e84b9ba3c606eb3d6e0dd2",
      "Inputs": [
        {
          "Id": "a8c47b67182a4e698ae13b8e951cd647",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "798db949b8ce4ebd902de59785199ab4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c1fca95c00c4b6f89645bf2541405e3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "694324b7c1164692ad55ae72e7869462",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1af781e98fa4f419df7d357f3d098ae",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a90dfd26d3f4fe58d9ee0e6730d81aa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "df2b066863144261959bf535ef8eebb6",
      "Inputs": [
        {
          "Id": "1b4b9dcd2ef24dd186548716b48f74ce",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21ee5c4e2a3e49999d17cb3973384b7b",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "TestFile",
      "Id": "daa6e13828fc45a38d9422fea42a59fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa914df5cd22478f8a9b0f2c44b1355c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Rebar_Info",
      "Id": "05dce35fccbb44d38707b4b237342142",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1fa6e614120f4924adaf1852ac977a6d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "6c934a6c436a413e8fed143f89bb73cd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d86c6ae7d53e42098926c5053fdb9cb4",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "F:\\_NGHIEN CUU\\_Github\\py_dynamo_revit\\excel_IO",
      "Id": "b6ee861d54354b378f03600200af068f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f73a797059f043eab6f37163232f93e9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "data2 = {\t\"a\":\"123\",\r\n\t\t\t\"b\":\"345\",\r\n\t\t\t\"c\":\"567\",\r\n\t\t\t\"d\":\"789\"}\r\nd4 = \t{\"a\":{\"D10\":10,\"D16\":16,\"D20\":20},\r\n\t\t\"b\":{\"D10\":11,\"D16\":17,\"D20\":21},\r\n\t\t\"c\":{\"D10\":12,\"D16\":18,\"D20\":22}}\r\n\r\nOUT = d4",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "61670b404c1447e6bfb9bf7092574a9c",
      "Inputs": [
        {
          "Id": "5bcfbb570944496398e6426161ac473f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33215a53a00848b9ad48a1dbbd8a875f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c028fdb62c14135a55b5cb85f063551",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77b5d468f6df46fb9671d4e270083bef",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffa03d084de14f71bf617df76ed83792",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "9a90dfd26d3f4fe58d9ee0e6730d81aa",
      "End": "1b4b9dcd2ef24dd186548716b48f74ce",
      "Id": "55e1c3ca65eb4703af6a914225142692"
    },
    {
      "Start": "aa914df5cd22478f8a9b0f2c44b1355c",
      "End": "694324b7c1164692ad55ae72e7869462",
      "Id": "68edbd02dea1496bb4a9ab06b4c1c1fa"
    },
    {
      "Start": "aa914df5cd22478f8a9b0f2c44b1355c",
      "End": "77b5d468f6df46fb9671d4e270083bef",
      "Id": "98e6a5a5dbd74b4895e284a52d06d1f6"
    },
    {
      "Start": "1fa6e614120f4924adaf1852ac977a6d",
      "End": "798db949b8ce4ebd902de59785199ab4",
      "Id": "75cd519538414565a12843e9886a6442"
    },
    {
      "Start": "1fa6e614120f4924adaf1852ac977a6d",
      "End": "33215a53a00848b9ad48a1dbbd8a875f",
      "Id": "3f52d38b45bb476a96084efa79bfad23"
    },
    {
      "Start": "d86c6ae7d53e42098926c5053fdb9cb4",
      "End": "1c1fca95c00c4b6f89645bf2541405e3",
      "Id": "d79f5d0157754324942682a83115add5"
    },
    {
      "Start": "d86c6ae7d53e42098926c5053fdb9cb4",
      "End": "7c028fdb62c14135a55b5cb85f063551",
      "Id": "6d5e3e22fada4cb4866da14c7c187f69"
    },
    {
      "Start": "f73a797059f043eab6f37163232f93e9",
      "End": "a8c47b67182a4e698ae13b8e951cd647",
      "Id": "26b7b339f3604fd2811aa1ad4a941a44"
    },
    {
      "Start": "f73a797059f043eab6f37163232f93e9",
      "End": "5bcfbb570944496398e6426161ac473f",
      "Id": "8024b8d7ed29435aa8010eec473adf7f"
    },
    {
      "Start": "ffa03d084de14f71bf617df76ed83792",
      "End": "a1af781e98fa4f419df7d357f3d098ae",
      "Id": "a7b16e0048ce4ff78dfe40300cd84462"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.0.3455",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "45ca9cf0d1e84b9ba3c606eb3d6e0dd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -30.8613780338794,
        "Y": 128.782639269976
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "df2b066863144261959bf535ef8eebb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 241.27561721001484,
        "Y": -95.886051438979862
      },
      {
        "ShowGeometry": true,
        "Name": "File Name",
        "Id": "daa6e13828fc45a38d9422fea42a59fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -404.20179309296867,
        "Y": -54.452562937301792
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name",
        "Id": "05dce35fccbb44d38707b4b237342142",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -384.83979031718923,
        "Y": 202.09807266748817
      },
      {
        "ShowGeometry": true,
        "Name": "Show Excel",
        "Id": "6c934a6c436a413e8fed143f89bb73cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -382.87416549651266,
        "Y": 293.25234516580315
      },
      {
        "ShowGeometry": true,
        "Name": "Excel file path",
        "Id": "b6ee861d54354b378f03600200af068f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -418.63929294109641,
        "Y": 72.995044467915847
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "61670b404c1447e6bfb9bf7092574a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -233.132597878202,
        "Y": 486.841893426291
      }
    ],
    "Annotations": [],
    "X": 622.50447581810238,
    "Y": 258.71936574435756,
    "Zoom": 0.73064114341857289
  }
}